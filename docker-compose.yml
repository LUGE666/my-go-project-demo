# yaml 配置
version: "1.0.1"
services:
  mysql:
    image: mysql:8.0.32
    restart: "always"
    container_name: mysql
    networks:
      - user
    ports:
      - 13306:3306
    expose:
      - "13306"
    command: "--authentication_policy=mysql_native_password --init-file /data/application/init.sql"
    # 账号密码
    environment:
      MYSQL_ROOT_PASSWORD: "ljf3692553690."
      # 数据库名字不能有分隔符，例如-
      MYSQL_DATABASE: "mi-mall"
      MYSQL_PASSWORD: "ljf3692553690."
    # 文件夹以及文件映射
    volumes:
      - ./init.sql:/data/application/init.sql
      # - /usr/local/docker/mysql/config/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf 
      # - /usr/local/docker/mysql/data/mysql:/var/lib/mysql
  redis:
    # 镜像版本号
    image: redis:alpine
    # 端口号
    ports:
      - 16379:6379
    expose:
      - "16379"
    # 失败后总是重启
    restart: "always"
    networks:
      - user
    # 以配置文件的方式启动 redis.conf
    # 方案一的好处是可以更多的定制 Redis 的配置，如果不想要密码，将redis.conf文件的requirepass注视掉就行
    # command: "redis-server /etc/redis/redis.conf --appendonly yes"
    # 方案二的好处是可以快速启动一个带免密的 Docker Redis 实例而不需要依赖外部的 redis.conf
    command: redis-server --requirepass 123456
    # 文件夹以及文件映射
    volumes:
      - /usr/local/docker/redis/redis.conf:/etc/redis/redis.conf 
      - /usr/local/docker/redis/data:/data -d redis:alpine redis-server 
  nginx:
    hostname: nginx
    environment:
      TZ: Asia/Shanghai
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "500m"
    container_name: mi-gin-nginx
    image: nginx:alpine
    ports:
      - 80:80
      # - 443:443
      # - 8888:8888
      # - 8889:8889
    volumes:
    # 当前的静态文件复制到镜像中的路径/data/app/mi-gin/static
      - /static:/data/app/mi-gin/static
      # 当前的nginx配置复制到镜像中的路径/etc/nginx/nginx.conf
      - ./nginx.conf:/etc/nginx/nginx.conf

  app:
  # build . 当前项目下的dockerfile
    build: .
    image: mi-gin:1.0.1
    container_name: mi-gin
    restart: "always"
    # command: sh -c  "./wait-for-it.sh mysql8019:3306 -- ./tracer ./config/config.ini"  # shell脚本方式启动
    command: ["/wait-for-it.sh", "mysql:3306","redis:6379", "--", "/tracer", "config.toml"]
    # 依赖启动项
    depends_on:
      - mysql
      - redis
      - nginx
    links: 
    - redis
    - mysql
    - nginx
    networks:
      - user
    ports:
      - 8081:8000
networks:
  user:
    driver: bridge
